#!/bin/bash

PIDFILE="$HOME/var/run/selenium-server.pid"
LOGFILE="$HOME/var/log/selenium-server.log"

DIR="$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)"

if [ ! $SELENIUM_SERVER_VERSION ]; then
    if [ -x 'setup.py' ]; then
        SELENIUM_SERVER_VERSION="$(grep 'selenium_server_version = ' setup.py | cut -d '=' -f 2 | cut -d ' ' -f 2)"
    else
        echo "Could not find selenium server jar"
        exit 1
    fi
fi

if [ ! -d "$(dirname $PIDFILE)" ]; then
    mkdir -p $(dirname $PIDFILE)
fi

if [ ! -d $LOGFILE ]; then
    mkdir -p $(dirname $LOGFILE)
fi

if [ -x $SELENIUM_SERVER_JAR ]; then
    if [ -e $DIR/selenium-server-standalone-"$SELENIUM_SERVER_VERSION".jar ]; then
        JARFILE=$DIR/selenium-server-standalone-"$SELENIUM_SERVER_VERSION".jar
    elif [ -e selenium-server-standalone-"$SELENIUM_SERVER_VERSION".jar ]; then
        JARFILE=selenium-server-standalone-"$SELENIUM_SERVER_VERSION".jar
    elif [ -e ./bin/selenium-server-standalone-"$SELENIUM_SERVER_VERSION".jar ]; then
        JARFILE=./bin/selenium-server-standalone-"$SELENIUM_SERVER_VERSION".jar
    elif [ -e ~/bin/selenium-server-standalone-"$SELENIUM_SERVER_VERSION".jar ]; then
        JARFILE=~/bin/selenium-server-standalone-"$SELENIUM_SERVER_VERSION".jar
    elif [ -e /opt/lib/selenium-server/selenium-server-standalone-"$SELENIUM_SERVER_VERSION".jar ]; then
        JARFILE=/opt/lib/selenium-server/selenium-server-standalone-"$SELENIUM_SERVER_VERSION".jar
    fi
fi

function start_server() {
    if [ `pgrep -f selenium-server-standalone-$SELENIUM_SERVER_VERSION` ]; then
        echo "Selenium server is already running..."
    else
        echo "Starting selenium server..."
        java -jar $JARFILE &> $LOGFILE &
        echo $! > $PIDFILE
    fi
}

function stop_server() {
    echo "Stopping selenium server..."
    if [ -e $PIDFILE ]; then
        pkill -F $PIDFILE
        rm -f $PIDFILE
    else
        force_stop_server
    fi
}

function force_stop_server() {
    echo "Force stopping selenium server..."
    OIFS=$IFS
    IFS=$'\n'
    echo "Select the process to kill:"
    SELENIUM_PIDS=$(ps -ef | grep selenium-server)
    select pid in $SELENIUM_PIDS; do
        killpid=$(echo $pid | cut -d " " -f 7)
        kill $killpid
        break
    done
    IFS=$OIFS
    [ -e $PIDFILE ] && rm -f $PIDFILE
}

function server_status() {
    if [ -e $PIDFILE ]; then
        SERVER_PID=`cat $PIDFILE`
        ps -f -p $SERVER_PID
    else
        echo "Selenium server is not running..."
    fi
}

function tail_log() {
    if [ -x $LOGFILE ]; then
        tail -f $LOGFILE
    else
        echo "Unable to find log file"
        exit 1
    fi
}

case "$1" in
    start)
        start_server
        ;;
    stop)
        stop_server
        ;;
    force-stop)
        force_stop_server
        ;;
    restart)
        [ -e $PIDFILE ] && stop_server
        start_server
        ;;
    status)
        server_status
        ;;
    log)
        tail_log
        ;;
    *)
        echo "Usage: $DIR/selenium-server {start|stop|force-stop|restart|status|log}"
        ;;
esac

